h1. Sexy Numerics

This plugin allows you to accept commas, currency symbols, and percent
symbols from users for integer and float fields in an ActiveRecord model.

(This is a fork of Doug Ramsay's CommaParser, which I think is an elegant
solution for commas, so I mod'd his code instead of writing it from 
scratch. http://github.com/dramsay/comma_parser/tree/master).


h2. Example

<pre><code>
create_table :cities do |t|
  t.string  :name,          :limit => 20,                    :null => false
  t.integer :population,                      :default => 0, :null => true
  t.float   :annual_budget, :annual_expenses, :default => 0, :null => true
  t.float   :percent_unemployed,              :default => 0, :null => true
end

class City < ActiveRecord::Base
  allow_commas            :population
  allow_currency_symbols  :annual_budget, :annual_expenses
  allow_percent_symbols   :percent_unemployed

  # rest of class
end
</code></pre>

Now the user can type population "1,000,000" into a form and it will still 
save correctly as "1000000" instead of "1". This saves you the hassle of 
stripping out commas either in JavaScript or in the controller.

You can also strip any arbitrary characters, like so:

<pre><code>
class City < ActiveRecord::Base
  allow_characters :annual_budget, annual_expenses, :characters => '.€|_' 
end
</code></pre>

or as an array-like object

<pre><code>
class City < ActiveRecord::Base
  allow_characters :annual_budget, annual_expenses, :characters => %w[. € | _]
end
</code></pre>


h2. Install

For Rails 2.1 and above:
<pre>
ruby script/plugin install git://github.com/twerth/sexy_numerics.git
</pre>

To upgrade:
<pre>
ruby script/plugin install git://github.com/twerth/sexy_numerics.git --force
</pre>

h2. Future

My intention is to add other numeric Model based features, not just
character removal.


h2. License

Released under the MIT license
